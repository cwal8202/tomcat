*자바스크립트*
 자바의 System.print.out(); 과 자바스크립트의 consol.log();가 비슷하다.

 숫자는 실수, 정수 둘 다 number type이다.
 문자열 타입은 "쌍따옴표", '홑따옴표', `백틱` 이렇게 3개가 가능하다.

********undefined null은 다르다. 어떻게 다르냐면~ (쉬는시간에 찾아보기)

nullish = 삼항연산자랑은 다르다. null 값일때 왼쪽값 반환한다.

자바스크립트는 값이 있으면 true 빈값이면 ("") false 다.

false인 경우 = NaN, null, "", 0, false가 있다.

console.log("asdf" && "abbb" && ""); 일 경우 ""가 false므로 false인 ""가 콘솔에 나온다.
&&연산자는 가장 먼저 false인 값을 찾는다.

console.log(null || "" || 1); 일 경우 1이 값이 있는것이므로 true인 1이 콘솔에 나온다.
|| 연산자는 가장 먼저 true인 값을 찾는다.

함수에서 파라미터에 아무값을 넣지 않아도 undefined값으로 나온다.
파라미터에 2개이상의 값을 넣어도 가장 먼저 넣은 값이 나온다. ex) function (a, b, c) = a값이 나온다.

파라미터에 많은 값들을 넣고 싶으면 argument (배열과 비슷한 형태)를 호출하면 된다.
    function params() {
        let sum = 0;
        for (let i = 0; i < arguments.length; i++) {
            // console.log(arguments[i]);
            sum += arguments[i];
        }
        console.log(sum);
    }

    params(1,2,3,4,5,6,7,8,9);

********argument에 대해서 공부하자 => 파라미터로 값을 여러게 줬을때 그걸 배열 형태로 가지고 있는것이 argument이다
function test (a, b, c) 가 있으면 argument[0] = a 가 된다. 그리고 argument.length = 3이 된다.

함수를 변수의 값이 가능하다. 대신 변수의 선언 후 변수의 값에 대입이 되어야지 사용 가능하다.

함수는 반환값으로 다른 타입이 가능하지만 같은 타입의 값으로 반환하는게 복잡하지 않고 더 좋다.

let multiply = (a, b) => a * b;
let m = multiply(10, 5); 같은 경우는 mulitply라는 함수가 m이라는 변수에서 호출 되는 것이다.

callback 함수 같은 경우 함수가 호출될때 callback함수가 호출된다.

문서에서 DOM객체를 호출해야하는데 document.getElementById("요소의 아이디") 로 DOM객체의 요소를 호출한다.


    function myListener (e) {
        alert("이벤트일어남");
        console.log(e);
        // console.log(inputText.value);
    }

    // mybtn.onclick = myListener;
    let elem = document.getElementById("mybtn");
    elem.addEventListener("click", myListener);

**여기서 만약 "click", 뒤에 myListener()로 하면 myListener의 반환값으로 undefined가 반환되어 우리가 원하는 흐름이 안된다.


classList로 



