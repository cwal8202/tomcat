*어제 복습*
우리가 선택한 웹서버
WAS Web Application Server

웹페이지를 요청에 따라 응답을 해준다.

정적인 웹 서버에서 리소스를 보여주는 연습을 했다.

tomcat = 아파치 재단에서 관리하는 프로젝트 중 하나로써 enterprice 환경에서 제공하는 서비스 중 하나다.

아파치는 자바로 이루어 져있다.

톰켓이 설치된 경로를 카탈리나 톰이라고 부른다.

bin에서 실행할 수 있는 bat파일들이 있다.

startup.bat = 접속을 기다리고 있다.

shutdown.bat = 접속을 끊는다.

tomcat 구동중일때 



*오늘*
목표 : 서버와 브라우저가 어떤 동작을 하고 있었는지 간단하게 살펴보자!

f12 - network

주소를 입력하고 엔터를 치면 요청이 시작된다.

http = 프로토콜
웹상에서 정보를 주고 받기 위한 약속
글자로 이루어 져있다.
이름 있고 값 있고 이런 형태로 되어 있다.
이름  값

general, request는 한 요청에 다 담겨져 있다.
요청정보의 헤더에는 
주소
request method : get = get은 어떤 요청 메소드냐면 "이거 줘" 라는 뜻의 요청이다.

tomcat은 사용자의 정보를 기다리고 있다가
접속하면 요청이라는 것을 살펴본다.
뭘 해달라는지를 살펴본다.
http 프로토콜에 맞게 정보들을 만들기 시작한다.

request URL : html이므로 내가 보내는 응답 또한 content-type : html이다.
응답 코드도 보낸다. 

http또한 헤더와 바디가 있는데
헤더에는 general과 response header가 들어가고

바디에는 html의 문서가 들어간다.



2교시
client - server 
우리가 이전까지 만든 어플들은 server가 없었다.

cliet만 있을때 위험성 : 
바로 직전 팀프때 했던 DB에도 비밀번호가 그대로 담겨져 있다.

server는 허락한 정보만 담을 수 있다. 유지보수에서도 server만 바꾸면 된다.

client에서 주로 하는 일이 무엇인가??

주소는 header에 담긴다.

inputtag 여러가지 타입을 제공한다. 사용자가 tag, password등 

*input 태그 안에 required를 입력하면 사용자가 아무것도 입력을 하지 않으면 요청이 안가게 한다.*
*input 태그 안에 maxlength= "10", minlength= "3" 등 글자수 제한도 가능하다.*

visbug = css 구성요소, 크기들을 알 수 있다.