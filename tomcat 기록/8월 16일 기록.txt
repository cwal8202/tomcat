로그인 여부를 로그인 쿠키로만 판별 할 수 있다.
브라우저가 기억하는 것은 쿠키다.

쿠키는 브라우저, 즉 사용자가 마음대로 수정, 삭제 가능하다.
f12-application에서 쿠키를 마음대로 수정, 추가가 가능하다.
해결 방법 = 브라우저가 정보를 오랫동안 가지고 있는걸 서버가 가지고 있게 한다.

*Session
서버가 가지고 있게 하는것 = session

클라이언트가 서버에서 요청하면 응답하면 연결이 끊긴다. 클라이언트가 많은 요청을 할때
같은 클라이언트가 한 요청인 것을 구별 해야 하는데 그때 쿠키를 사용한다.
ex) 클라이언트가 서버에 한번 요청할때 서버는 쿠키에 "넌 client100이야"라고 지정을 한다.
그 후 그 클라이언트가 요청을 하면 쿠키의 값을 확인 할 수 있다.

쿠키에서 계속 보였던 JSession의 value에 보이는 것도 서버가 클라이언트에게 준 값이다.


세션은 특정시간동안 세션아이디가 한번 더 오지 않을 경우 그 값을 지운다.
시간 단위로 정보를 유지한다.
서버마다 시간 설정이 가능하다.
tomcat같은경우 30분으로 되어잇다.

브라우저가 꺼지면 세션 값이 없어진다.
브라우저 마다 세션이 다르다
-세션은 브라우저 단위이다.

session.invalidate(); 메소드를 쓰면 세션이 끝난다.
그래서 저 메소드를 쓴 후 세션 아이디와 시간을 확인하면 아이디가 바뀌어있고 세션 시간이 새로 바뀐다.

401 = 로그인이 안되어 있다.

session에 값을 담아서 많은 활용이 가능하다
이 값을 계속 쓸 경우에는 request보단 session에 담아서 계속 사용 가능하다.
필요 하다면 cookie에 값을 저장할 수도 있다.

application은 모든 유저 모든 서블릿에서 공유하는 객체다.

application은 범위가 너무 넓어서 한 유저를 특정시키기 어렵고 언제 바뀌는지 추적해야 하므로
applcation은 구동할때 필요한 설정값들을 담을때 사용한다.


*Filter 
doFilter = servlet에게 원래 요청과 응답을 전달

filter-mapping은
요청한 servlet으로 가기 전에 filter를 한번 거치고 다시 servelt으로 갔다가 다시 filter로 간다.

urlPattern  = "/*" 
/*주소는 서블릿은 안쓴다.
필터에서 모든 요청에 대해서 동작하게 만들려고 쓴다.


init메소드는 객체가 한번 호출될때 생성된다.

같은 주소에도 다수의 필터가 동작 할 수 있다. 
어노테이션으로 filter 주면 순서 못정하지만
web.xml에선 먼저 적은게 먼저 실행된다.